version: '3.8'

services:
  pera-server:
    build:
      context: ./server
    ports:
      - "${PERA_SERVER_PORT}:${PERA_SERVER_PORT}"
    environment:
      - PORT=${PERA_SERVER_PORT}
      - CHUNK_SIZE=${CHUNK_SIZE}
      - SHARDS_AMOUNT=${SHARDS_AMOUNT}
      - SHARD_1_PORT=${SHARD_1_PORT}
      - SHARD_2_PORT=${SHARD_2_PORT}
      - SHARD_3_PORT=${SHARD_3_PORT}
      - SHARD_1_HOST=${SHARD_1_HOST}
      - SHARD_2_HOST=${SHARD_2_HOST}
      - SHARD_3_HOST=${SHARD_3_HOST}
      - MYSQL_HOST=mysql-auth
      - MYSQL_PORT=3306
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_DATABASE=${MYSQL_DATABASE_AUTH}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    networks:
      - app-network
    volumes:
      - ./server:/app
    depends_on:
      mysql-auth:
        condition: service_healthy

  mysql-auth:
    image: mysql:8.4.0
    ports:
      - "${MYSQL_PORT_AUTH}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE_AUTH}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - app-network
    restart: always
    volumes:
      - mysql-auth-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-uroot", "-proot"]
      interval: 10s
      timeout: 5s
      retries: 5

  mysql:
    image: mysql:8.4.0
    ports:
      - "${MYSQL_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - app-network
    restart: always
    volumes:
      - mysql-data:/var/lib/mysql

  shard1:
    build:
      context: ./shard
    ports:
      - "${SHARD_1_PORT}:${SHARD_1_PORT}"
    environment:
      - SHARD_ID=1
      - PORT=${SHARD_1_PORT}
      - IS_MASTER=true
      - REPLICA_HOST=${SHARD_1_REPLICA_1_HOST}
      - REPLICA_PORT=${SHARD_1_REPLICA_1_PORT}
    networks:
      - app-network
    volumes:
      - shard1-data:/app/filesystem

  shard2:
    build:
      context: ./shard
    ports:
      - "${SHARD_2_PORT}:${SHARD_2_PORT}"
    environment:
      - SHARD_ID=2
      - PORT=${SHARD_2_PORT}
      - IS_MASTER=true
      - REPLICA_HOST=${SHARD_2_REPLICA_1_HOST}
      - REPLICA_PORT=${SHARD_2_REPLICA_1_PORT}
    networks:
      - app-network
    volumes:
      - shard2-data:/app/filesystem

  shard3:
    build:
      context: ./shard
    ports:
      - "${SHARD_3_PORT}:${SHARD_3_PORT}"
    environment:
      - SHARD_ID=3
      - PORT=${SHARD_3_PORT}
      - IS_MASTER=true
      - REPLICA_HOST=${SHARD_3_REPLICA_1_HOST}
      - REPLICA_PORT=${SHARD_3_REPLICA_1_PORT}
    networks:
      - app-network
    volumes:
      - shard3-data:/app/filesystem

  shard1_replica1:
    build:
      context: ./shard
    ports:
      - "${SHARD_1_REPLICA_1_PORT}:${SHARD_1_REPLICA_1_PORT}"
    environment:
      - SHARD_ID=1
      - PORT=${SHARD_1_REPLICA_1_PORT}
      - IS_MASTER=false
    networks:
      - app-network
    volumes:
      - shard1-replica1-data:/app/filesystem
  
  shard2_replica1:
    build:
      context: ./shard
    ports:
      - "${SHARD_2_REPLICA_1_PORT}:${SHARD_2_REPLICA_1_PORT}"
    environment:
      - SHARD_ID=2
      - PORT=${SHARD_2_REPLICA_1_PORT}
      - IS_MASTER=false
    networks:
      - app-network
    volumes:
      - shard2-replica1-data:/app/filesystem

  shard3_replica1:
    build:
      context: ./shard
    ports:
      - "${SHARD_3_REPLICA_1_PORT}:${SHARD_3_REPLICA_1_PORT}"
    environment:
      - SHARD_ID=3
      - PORT=${SHARD_3_REPLICA_1_PORT}
      - IS_MASTER=false
    networks:
      - app-network
    volumes:
      - shard3-replica1-data:/app/filesystem

networks:
  app-network:
    driver: bridge

volumes:
  mysql-data:
  mysql-auth-data:
  shard1-data:
  shard2-data:
  shard3-data:
  shard1-replica1-data:
  shard2-replica1-data:
  shard3-replica1-data:
